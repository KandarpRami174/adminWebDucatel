{"version":3,"sources":["webpack:///./src/api/SHIELD/webShield.js","webpack:///./src/api/Subscription/Subscription.js","webpack:///./src/api/Subject/Subject.js"],"names":["url","ShieldAPI","Promise","resolve","reject","axios","get","then","res","data","err","SID","masterUserName","masterName","masterEmail","masterPass","masterRole","myTeam","post","catch","put","delete","SubscriptionAPI","rej","subsID","subsTitle","subsDetails","subsMonth","subsPrice","subsData","SubjectAPI","subID","subTitle","subImage","subLevelID","subData","subIsBaseImg"],"mappings":"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","file":"js/app~1da5829d.9741be1f.js","sourcesContent":["import axios from \"axios\";\n\nconst url = \"webducatel/api/\";\n\nclass ShieldAPI {\n    // Get Members\n    static getAllMember() {\n        return new Promise((resolve, reject) => {\n            try {\n                axios\n                    .get(`${url}master/getmaster`)\n                    .then((res) => {\n                        const data = res.data;\n                        resolve(data);\n                    });\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    // Get Members by ID\n    static getAllMemberID(SID) {\n        return new Promise((resolve, reject) => {\n            try {\n                axios\n                    .get(`${url}master/getmaster/${SID}`)\n                    .then((res) => {\n                        const data = res.data;\n                        resolve(data);\n                    });\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    // Add Members\n    static addMyTeam(masterUserName, masterName, masterEmail, masterPass, masterRole) {\n        const myTeam = {\n            masterUserName,\n            masterName,\n            masterEmail,\n            masterPass,\n            masterRole\n        };\n        return new Promise((resolve, reject) => {\n            axios\n                .post(`${url}master/insertmaster`, myTeam)\n                .then((res) => {\n                    const data = res.data;\n                    resolve(data);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    // Update Members\n    static updateMyTeam(SID, masterUserName, masterName, masterEmail, masterPass, masterRole) {\n        const myTeam = {\n            masterUserName,\n            masterName,\n            masterEmail,\n            masterPass,\n            masterRole\n        };\n        return new Promise((resolve, reject) => {\n            axios\n                .put(`${url}master/updatemaster/${SID}`, myTeam)\n                .then((res) => {\n                    const data = res.data;\n                    resolve(data);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    // Delete Members\n    static deleteMyTeam(SID) {\n        return new Promise((resolve, reject) => {\n            axios\n                .delete(`${url}master/deletemaster/${SID}`)\n                .then((res) => {\n                    const data = res.data;\n                    resolve(data);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n\nexport default ShieldAPI;\n","import axios from \"axios\";\n\nconst url = \"webducatel/api/\";\n\nclass SubscriptionAPI {\n  // GET Subscription\n  static getSubscription() {\n    return new Promise((resolve, rej) => {\n      try {\n        axios.get(`${url}subscription/getsubscription`).then((res) => {\n          const data = res.data;\n          resolve(data);\n        });\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }\n\n  // GET Subscription By ID\n  static getSubscriptionByID(subsID) {\n    return new Promise((resolve, rej) => {\n      try {\n        axios.get(`${url}subscription/getsubscription/${subsID}`).then((res) => {\n          const data = res.data;\n          resolve(data);\n        });\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }\n\n  // POST Subscription\n  static addSubscription(subsTitle, subsDetails, subsMonth, subsPrice) {\n    const subsData = {\n        subsTitle, subsDetails, subsMonth, subsPrice\n    };\n\n    return new Promise((resolve, rej) => {\n      axios\n        .post(`${url}subscription/insertsubscription`, subsData)\n        .then((res) => {\n          const data = res.data;\n          resolve(data);\n        })\n        .catch((err) => {\n          rej(err);\n        });\n    });\n  }\n\n  // PUT Subscription\n  static updateSubscription(subsID, subsTitle, subsDetails, subsMonth, subsPrice) {\n    const subsData = {\n        subsTitle, subsDetails, subsMonth, subsPrice\n    };\n\n    return new Promise((resolve, rej) => {\n      axios\n        .put(`${url}subscription/updatesubscription/${subsID}`, subsData)\n        .then((res) => {\n          const data = res.data;\n          resolve(data);\n        })\n        .catch((err) => {\n          rej(err);\n        });\n    });\n  }\n\n  // DELETE Subscription\n  static deleteSubscription(subsID) {\n    return new Promise((resolve, reject) => {\n      axios\n        .delete(`${url}subscription/deletesubscription/${subsID}`)\n        .then((res) => {\n          const data = res.data;\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default SubscriptionAPI;\n","import axios from \"axios\";\n\nconst url = \"webducatel/api/\";\n\nclass SubjectAPI {\n  // GET Subject\n  static getSubject() {\n    return new Promise((resolve, rej) => {\n      try {\n        axios.get(`${url}subject/getSubject`).then((res) => {\n          const data = res.data;\n          resolve(data);\n        });\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }\n\n  // GET Subject By ID\n  static getSubjectByID(subID) {\n    return new Promise((resolve, rej) => {\n      try {\n        axios.get(`${url}subject/getSubject/${subID}`).then((res) => {\n          const data = res.data;\n          resolve(data);\n        });\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }\n\n  // POST Subject\n  static addSubject(subTitle, subImage, subLevelID) {\n    const subData = {\n      subTitle,\n      subImage,\n      subLevelID,\n    };\n\n    return new Promise((resolve, rej) => {\n      axios\n        .post(`${url}subject/insertSubject`, subData)\n        .then((res) => {\n          const data = res.data;\n          resolve(data);\n        })\n        .catch((err) => {\n          rej(err);\n        });\n    });\n  }\n\n  // PUT Subject\n  static updateSubject(subID, subTitle, subImage, subIsBaseImg, subLevelID) {\n    const subData = {\n      subTitle,\n      subImage,\n      subIsBaseImg,\n      subLevelID,\n    };\n\n    return new Promise((resolve, rej) => {\n      axios\n        .put(`${url}subject/updateSubject/${subID}`, subData)\n        .then((res) => {\n          const data = res.data;\n          resolve(data);\n        })\n        .catch((err) => {\n          rej(err);\n        });\n    });\n  }\n\n  // DELETE Subject\n  static deleteSubject(subID) {\n    return new Promise((resolve, reject) => {\n      axios\n        .delete(`${url}subject/deleteSubject/${subID}`)\n        .then((res) => {\n          const data = res.data;\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default SubjectAPI;\n"],"sourceRoot":""}